[{"D:\\Code\\heroku\\react-dashboard\\src\\index.js":"1","D:\\Code\\heroku\\react-dashboard\\src\\store\\reducers\\reducer.js":"2","D:\\Code\\heroku\\react-dashboard\\src\\App.js":"3","D:\\Code\\heroku\\react-dashboard\\src\\components\\NavigationBar.js":"4","D:\\Code\\heroku\\react-dashboard\\src\\components\\NavBox.js":"5","D:\\Code\\heroku\\react-dashboard\\src\\components\\APIGrid.js":"6","D:\\Code\\heroku\\react-dashboard\\src\\components\\TableSelector.js":"7","D:\\Code\\heroku\\react-dashboard\\src\\components\\Settings.js":"8","D:\\Code\\heroku\\react-dashboard\\src\\components\\TimeLeft.js":"9","D:\\Code\\heroku\\react-dashboard\\src\\components\\LoadingIcon.js":"10","D:\\Code\\heroku\\react-dashboard\\src\\components\\TableName.js":"11","D:\\Code\\heroku\\react-dashboard\\src\\components\\SavingIcon.js":"12","D:\\Code\\heroku\\react-dashboard\\src\\components\\CustomTooltip.js":"13","D:\\Code\\heroku\\react-dashboard\\src\\store\\actions\\action.js":"14","D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-advance.js":"15","D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-recruit.js":"16","D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-advance.js":"17","D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-advise.js":"18","D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-recruit.js":"19","D:\\Code\\heroku\\react-dashboard\\src\\data\\sample.js":"20","D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-advise.js":"21","D:\\Code\\heroku\\react-dashboard\\src\\components\\LoadingButton.js":"22","D:\\Code\\heroku\\react-dashboard\\src\\components\\RefreshSlider.js":"23","D:\\Code\\heroku\\react-dashboard\\src\\components\\HoursAgoSlider.js":"24","D:\\Code\\heroku\\react-dashboard\\src\\components\\CookieHandler.js":"25","D:\\Code\\heroku\\react-dashboard\\src\\components\\SampleFooter.js":"26","D:\\Code\\heroku\\react-dashboard\\src\\components\\Footer.js":"27","D:\\Code\\static\\p04-dashboard\\src\\index.js":"28","D:\\Code\\static\\p04-dashboard\\src\\store\\reducers\\reducer.js":"29","D:\\Code\\static\\p04-dashboard\\src\\App.js":"30","D:\\Code\\static\\p04-dashboard\\src\\components\\Footer.js":"31","D:\\Code\\static\\p04-dashboard\\src\\components\\NavigationBar.js":"32","D:\\Code\\static\\p04-dashboard\\src\\components\\NavBox.js":"33","D:\\Code\\static\\p04-dashboard\\src\\components\\APIGrid.js":"34","D:\\Code\\static\\p04-dashboard\\src\\components\\SampleFooter.js":"35","D:\\Code\\static\\p04-dashboard\\src\\components\\Settings.js":"36","D:\\Code\\static\\p04-dashboard\\src\\components\\LoadingIcon.js":"37","D:\\Code\\static\\p04-dashboard\\src\\components\\SavingIcon.js":"38","D:\\Code\\static\\p04-dashboard\\src\\components\\TableSelector.js":"39","D:\\Code\\static\\p04-dashboard\\src\\components\\TableName.js":"40","D:\\Code\\static\\p04-dashboard\\src\\components\\TimeLeft.js":"41","D:\\Code\\static\\p04-dashboard\\src\\store\\actions\\action.js":"42","D:\\Code\\static\\p04-dashboard\\src\\components\\CustomTooltip.js":"43","D:\\Code\\static\\p04-dashboard\\src\\data\\sample.js":"44","D:\\Code\\static\\p04-dashboard\\src\\components\\CookieHandler.js":"45","D:\\Code\\static\\p04-dashboard\\src\\components\\RefreshSlider.js":"46","D:\\Code\\static\\p04-dashboard\\src\\components\\HoursAgoSlider.js":"47","D:\\Code\\static\\p04-dashboard\\src\\components\\LoadingButton.js":"48"},{"size":592,"mtime":1608584306049,"results":"49","hashOfConfig":"50"},{"size":1438,"mtime":1608584306049,"results":"51","hashOfConfig":"50"},{"size":587,"mtime":1610546533248,"results":"52","hashOfConfig":"50"},{"size":1201,"mtime":1608584306040,"results":"53","hashOfConfig":"50"},{"size":2415,"mtime":1608584306040,"results":"54","hashOfConfig":"50"},{"size":5554,"mtime":1610546239735,"results":"55","hashOfConfig":"50"},{"size":6109,"mtime":1610546083623,"results":"56","hashOfConfig":"50"},{"size":2579,"mtime":1608584306040,"results":"57","hashOfConfig":"50"},{"size":2221,"mtime":1608584306040,"results":"58","hashOfConfig":"50"},{"size":603,"mtime":1608584306040,"results":"59","hashOfConfig":"50"},{"size":917,"mtime":1608584306040,"results":"60","hashOfConfig":"50"},{"size":1086,"mtime":1608584306040,"results":"61","hashOfConfig":"50"},{"size":2338,"mtime":1608584306040,"results":"62","hashOfConfig":"50"},{"size":811,"mtime":1608584306049,"results":"63","hashOfConfig":"50"},{"size":7825,"mtime":1608584306040,"results":"64","hashOfConfig":"50"},{"size":16115,"mtime":1608584306040,"results":"65","hashOfConfig":"50"},{"size":10831,"mtime":1608584306040,"results":"66","hashOfConfig":"50"},{"size":73434,"mtime":1608584306040,"results":"67","hashOfConfig":"50"},{"size":331647,"mtime":1608584306040,"results":"68","hashOfConfig":"50"},{"size":28349,"mtime":1610546343318,"results":"69","hashOfConfig":"50"},{"size":73434,"mtime":1608584306040,"results":"70","hashOfConfig":"50"},{"size":1743,"mtime":1608584306040,"results":"71","hashOfConfig":"50"},{"size":1476,"mtime":1608584306040,"results":"72","hashOfConfig":"50"},{"size":1772,"mtime":1608584306040,"results":"73","hashOfConfig":"50"},{"size":1222,"mtime":1608584306040,"results":"74","hashOfConfig":"50"},{"size":794,"mtime":1610546439013,"results":"75","hashOfConfig":"50"},{"size":770,"mtime":1610546530468,"results":"76","hashOfConfig":"50"},{"size":592,"mtime":1608584306049,"results":"77","hashOfConfig":"78"},{"size":1438,"mtime":1608584306049,"results":"79","hashOfConfig":"78"},{"size":587,"mtime":1610546533248,"results":"80","hashOfConfig":"78"},{"size":770,"mtime":1610546530468,"results":"81","hashOfConfig":"78"},{"size":1201,"mtime":1608584306040,"results":"82","hashOfConfig":"78"},{"size":2415,"mtime":1608584306040,"results":"83","hashOfConfig":"78"},{"size":5554,"mtime":1610546239735,"results":"84","hashOfConfig":"78"},{"size":794,"mtime":1610546439013,"results":"85","hashOfConfig":"78"},{"size":2579,"mtime":1608584306040,"results":"86","hashOfConfig":"78"},{"size":603,"mtime":1608584306040,"results":"87","hashOfConfig":"78"},{"size":1086,"mtime":1608584306040,"results":"88","hashOfConfig":"78"},{"size":6109,"mtime":1610546083623,"results":"89","hashOfConfig":"78"},{"size":917,"mtime":1608584306040,"results":"90","hashOfConfig":"78"},{"size":2221,"mtime":1608584306040,"results":"91","hashOfConfig":"78"},{"size":811,"mtime":1608584306049,"results":"92","hashOfConfig":"78"},{"size":2338,"mtime":1608584306040,"results":"93","hashOfConfig":"78"},{"size":28349,"mtime":1610546343318,"results":"94","hashOfConfig":"78"},{"size":1222,"mtime":1608584306040,"results":"95","hashOfConfig":"78"},{"size":1476,"mtime":1608584306040,"results":"96","hashOfConfig":"78"},{"size":1772,"mtime":1608584306040,"results":"97","hashOfConfig":"78"},{"size":1743,"mtime":1608584306040,"results":"98","hashOfConfig":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"14oa8s3",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"101"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10h27g8",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\heroku\\react-dashboard\\src\\index.js",[],["204","205"],"D:\\Code\\heroku\\react-dashboard\\src\\store\\reducers\\reducer.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\App.js",["206"],"import React from 'react'\r\nimport { connect } from 'react-redux' \r\nimport APIGrid from './components/APIGrid'\r\nimport NavigationBar from './components/NavigationBar'\r\nimport Footer from './components/Footer'\r\nimport NavBox from './components/NavBox'\r\nimport SampleFooter from './components/SampleFooter'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <APIGrid />\r\n      <NavBox />\r\n      <SampleFooter />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      table: state.reducer.table,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","D:\\Code\\heroku\\react-dashboard\\src\\components\\NavigationBar.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\NavBox.js",["207","208","209"],"import React, { useRef, useEffect, useState } from 'react'\r\nimport _debounce from 'lodash.debounce'\r\n\r\nconst mq = window.matchMedia( \"(max-width: 991px)\" )\r\n\r\nexport default function NavBox() {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  const imgHome = useRef(null)\r\n  const imgCode = useRef(null)\r\n  const home = useRef(null)\r\n  const code = useRef(null)\r\n\r\n  useEffect(() => {\r\n    imgCode.current.style.height = \"0px\"\r\n    imgHome.current.style.height = \"0px\"\r\n\r\n    if (window.innerWidth <= 991) {\r\n      home.current.innerText = \"HOME\"\r\n      code.current.innerText = \"CODE\"\r\n    } else {\r\n      home.current.innerText = \"GO HOME\"\r\n      code.current.innerText = \"SEE CODE\"\r\n    }\r\n\r\n    const handleResize = _debounce(() => {\r\n      setWidth(window.innerWidth)\r\n      if (window.innerWidth <= 991) {\r\n        home.current.innerText = \"HOME\"\r\n        code.current.innerText = \"CODE\"\r\n      } else {\r\n        home.current.innerText = \"GO HOME\"\r\n        code.current.innerText = \"SEE CODE\"\r\n      }\r\n    }, 100)\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [])\r\n\r\n  \r\n\r\n  function expand(ref) {\r\n    if (mq.matches) { // Small, screen width <= 991px\r\n      if (ref.current.id === \"img-code\") {\r\n        imgCode.current.style.height = \"70%\"\r\n      } else {\r\n        imgHome.current.style.height = \"100%\"\r\n      }\r\n    } else { // Large, screen width > 991px\r\n      if (ref.current.id === \"img-code\") {\r\n        imgCode.current.style.height = \"160%\"\r\n      } else {\r\n        imgHome.current.style.height = \"160%\"\r\n      }\r\n    }\r\n  }\r\n\r\n  function contract(ref) {\r\n    if (ref.current.id === \"img-code\") {\r\n      imgCode.current.style.height = \"0%\"\r\n    } else {\r\n      imgHome.current.style.height = \"0%\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"navBox\">\r\n      <img src='/navBox-home.png' ref={imgHome} id=\"img-home\" />\r\n      <a href=\"https://codabool.com/projects\" ref={home} className=\"navBox-btn\" id=\"btn-home\" onMouseEnter={() => expand(imgHome)} onMouseLeave={() => contract(imgHome)}>GO HOME</a>\r\n      <a href=\"https://github.com/CodaBool/react-dashboard\" ref={code} className=\"navBox-btn\" id=\"btn-code\" onMouseEnter={() => expand(imgCode)} onMouseLeave={() => contract(imgCode)}>SEE CODE</a>\r\n      <img src=\"/navBox-code.png\" ref={imgCode} id=\"img-code\" />\r\n    </div>\r\n  )\r\n}\r\n","D:\\Code\\heroku\\react-dashboard\\src\\components\\APIGrid.js",["210","211"],"/* this component is the heart of the dashboard\r\n * it populates an ag-grid-react table with API calls to our Express server\r\n *\r\n * it uses cookies, local state, and redux states\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/action\";\r\nimport { clAdv, clAds, clRec, upAdv, upAds, upRec, columnDefs } from '../data/sample'\r\n\r\nconst WAIT_INTERVAL = 1000; // how long between\r\nvar gridReady = false; // initial state of not ready\r\nvar gridColumnApi, gridApi, timer, format = null\r\nvar pinWidth = 150\r\n\r\nfunction chooseColumns(table) {\r\n  console.log('runnning setRowData with',table)\r\n  switch (table) {\r\n    case \"cl-advance\":\r\n      return clAdv;\r\n    case \"cl-advise\":\r\n      return clAds;\r\n    case \"cl-recruit\":\r\n      return clRec;\r\n    case \"up-advance\":\r\n      return upAdv;\r\n    case \"up-advise\":\r\n      return upAds;\r\n    case \"up-recruit\":\r\n      return upRec;\r\n    default:\r\n      return clAdv;\r\n  }\r\n}\r\n\r\n\r\n\r\n// resizes the columns to match the headers\r\nexport const resizeAuto = () => {\r\n  // only works on columns which are visible\r\n  // to resize all columns, the suppressColumnVirtualisation must be set to true, possible performance hit\r\n  format = 'auto'\r\n  var allColumnIds = [];\r\n  gridColumnApi.getAllColumns().forEach(function (column) {\r\n    allColumnIds.push(column.colId);\r\n  });\r\n  gridColumnApi.autoSizeColumns(allColumnIds, false); // false to consider headers, true to not\r\n};\r\n\r\n// resize columns to fit on screen\r\nexport const resizeToFit = () => {\r\n  format = 'fit'\r\n  gridApi.sizeColumnsToFit();\r\n};\r\n\r\n\r\n/* APIGrid component takes in redux states as props\r\n * saves default column definitions in local */\r\nconst APIGrid = (props) => {\r\n  const { changeTable, table, changeLoading, loading, changeSaving, changeRowCount } = props;\r\n  // default column definitions\r\n  // these are applied to every column\r\n  const [defaultColDef] = useState({\r\n    flex: 1,\r\n    sortable: true,\r\n    filter: true,\r\n    resizable: true,\r\n    suppressMenu: true, // (1/2) comment for hidden filter and cleaner grid header UI\r\n    floatingFilter: true, // (2/2)\r\n    tooltipComponent: \"customTooltip\",\r\n    setRowData: chooseColumns(table)\r\n  });\r\n  const [frameworkComponents] = useState({ customTooltip: CustomTooltip })\r\n\r\n  // when grid first loads\r\n  const onGridReady = (params) => {\r\n    gridApi = params.api;\r\n    gridColumnApi = params.columnApi;\r\n    gridReady = true;\r\n  };\r\n  const refreshData = (params) => {\r\n    gridApi = params.api;\r\n    gridColumnApi = params.columnApi;\r\n\r\n    var interval = setInterval(myTimer, 2000);\r\n    function myTimer() {\r\n      changeLoading(false);\r\n      clearInterval(interval);\r\n    }\r\n  };\r\n  const filterChange = () => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(triggerChange, WAIT_INTERVAL);\r\n  }\r\n  function triggerChange() {\r\n    changeSaving(true);\r\n    changeRowCount(getCountRowsAfterFilter())\r\n  }\r\n  function getCountRowsAfterFilter() {\r\n    var count = 0\r\n    gridApi.forEachNodeAfterFilter(() => count++)\r\n    return count\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (gridReady) {\r\n      if (format === 'fit') {\r\n        resizeToFit()\r\n        // reload table\r\n      } else if (format === 'auto') {\r\n        resizeAuto()\r\n      }\r\n    }\r\n  }, [table])\r\n\r\n  useEffect(() => {\r\n    if (gridReady) {\r\n      if (loading) {\r\n        refreshCells();\r\n      }\r\n    }\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 991) {\r\n      pinWidth = 20\r\n      console.log('small', pinWidth)\r\n    } else {\r\n      console.log('large', pinWidth)\r\n    }\r\n  }, [])\r\n\r\n  const refreshCells = () => {\r\n    var params = {\r\n      suppressFlash: false, // skip cell flashing\r\n    };\r\n    gridApi.refreshCells(params);\r\n    var interval = setInterval(myTimer, 2000);\r\n    function myTimer() {\r\n      changeLoading(false);\r\n      clearInterval(interval);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"example-wrapper\">\r\n        <div\r\n          id=\"myGrid\"\r\n          className=\"ag-theme-alpine\"\r\n        >\r\n          <AgGridReact\r\n            columnDefs={columnDefs}\r\n            rowData={chooseColumns(table)}\r\n            defaultColDef={defaultColDef}\r\n            onGridReady={onGridReady}\r\n            frameworkComponents={frameworkComponents}\r\n            tooltipShowDelay=\"500\" // short delay before tooltip appears on hover\r\n            onFilterChanged={filterChange}\r\n            suppressColumnVirtualisation={true} // for performance\r\n            onNewColumnsLoaded={refreshData} // force refreshes the entire table when col defs change\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n// connections to redux\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    table: state.reducer.table,\r\n    saving: state.reducer.saving,\r\n    loading: state.reducer.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeTable: (table) => dispatch(actions.changeTable(table)),\r\n    changeLoading: (loading) => dispatch(actions.changeLoading(loading)),\r\n    changeSaving: (saving) => dispatch(actions.changeSaving(saving)),\r\n    changeRowCount: (rowCount) => dispatch(actions.changeRowCount(rowCount)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {\r\n  forwardRef: true,\r\n})(APIGrid);\r\n","D:\\Code\\heroku\\react-dashboard\\src\\components\\TableSelector.js",["212","213"],"/* Buttons in the navbar to select the table to display\r\n * Grouped into clones/upgrade (ref. parent) and advance/advise/recruit (ref. sub)\r\n * Uses useRef to manipulate button styling \r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions/action'\r\nimport { setCookieByValue, getCookieByName } from './CookieHandler'\r\nimport { ButtonGroup } from 'react-bootstrap'\r\n\r\nvar activeChild, activeParent = null // temporary storage of which table button is active\r\n\r\nfunction TableSelector({ table, changeTable, changeSaving }) {\r\n\r\n  // local states to set the style as dark or light to show which is active\r\n  const [cloneActive, setCloneActive] = useState('btn-dark')\r\n  const [upgradeActive, setUpgradeActive] = useState('btn-light')\r\n  const [advanceActive, setAdvanceActive] = useState('btn-dark')\r\n  const [adviseActive, setAdviseActive] = useState('btn-light')\r\n  const [recruitActive, setRecruitActive] = useState('btn-light')\r\n\r\n  // initialize references which will be attached to each button\r\n  const clone = useRef(null)\r\n  const upgrade = useRef(null)\r\n  const advance = useRef(null)\r\n  const advise = useRef(null)\r\n  const recruit = useRef(null)\r\n\r\n  function removeActive(ref) {\r\n    if (ref === clone || ref === upgrade) { // remove active class from parent row\r\n      setCloneActive('btn-light')\r\n      setUpgradeActive('btn-light')\r\n    } else { // remove active class from sub row\r\n      setAdvanceActive('btn-light')\r\n      setAdviseActive('btn-light')\r\n      setRecruitActive('btn-light')\r\n    }\r\n  }\r\n  \r\n  function handleClick(e, ref) {\r\n    if (ref.current.classList.contains('btn-light')) { // if not active\r\n      if (e) { // A manual click\r\n        updateTable(e, ref) // 1st pass just change table\r\n      } else { // from useEffect props.table change\r\n        removeActive(ref)\r\n        updateTable(null, ref) // 2nd pass or from cookies make all other changes\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateTable(e, ref) {\r\n\r\n    activeParent = table.substring(0, 2) // cl (clone) | up (upgrade)\r\n    activeChild = table.substring(3, 14) // advance | advise | recruit\r\n\r\n    // change table\r\n    if (e !== null) { // from manual click\r\n    \r\n      // Only change for the current button group. \r\n      // A click on clone should not change the activeChild group\r\n      switch(ref) { // A click on advance should not change activeParent group\r\n        case clone: changeTable(\"cl-\" + activeChild); break\r\n        case upgrade: changeTable(\"up-\" + activeChild); break\r\n        case advance: changeTable(activeParent + \"-advance\"); break\r\n        case advise: changeTable(activeParent + \"-advise\"); break\r\n        case recruit: changeTable(activeParent + \"-recruit\"); break\r\n        default: console.log(\"Invalid table selected\");\r\n      }\r\n    } else {\r\n      switch(ref) { // adds active class to button\r\n        case clone: \r\n          setCloneActive(\"btn-dark\")\r\n          setCookieByValue(\"cl-\" + activeChild, \"table\")\r\n          changeSaving(true)\r\n          break\r\n        case upgrade: \r\n          setUpgradeActive(\"btn-dark\")\r\n          setCookieByValue(\"up-\" + activeChild, \"table\")\r\n          changeSaving(true)\r\n          break\r\n        case advance: \r\n          setAdvanceActive(\"btn-dark\")\r\n          setCookieByValue(activeParent + \"-advance\", \"table\") \r\n          changeSaving(true)\r\n          break\r\n        case advise: \r\n          setAdviseActive(\"btn-dark\")\r\n          setCookieByValue(activeParent + \"-advise\", \"table\") \r\n          changeSaving(true)\r\n          break\r\n        case recruit: \r\n          setRecruitActive(\"btn-dark\")\r\n          setCookieByValue(activeParent + \"-recruit\", \"table\") \r\n          changeSaving(true)\r\n          break\r\n        default: console.log(\"ref error with\", ref)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(\"============ Table change to\", table, \" ============\")\r\n    switch(table.substring(0, 2)) {\r\n      case \"cl\": handleClick(null, clone); break\r\n      case \"up\": handleClick(null, upgrade); break\r\n      default: break\r\n    }\r\n    switch(table.substring(3, 12)) {\r\n      case \"advance\": handleClick(null, advance); break\r\n      case \"advise\": handleClick(null, advise); break\r\n      case \"recruit\": handleClick(null, recruit); break\r\n      default: break\r\n    }\r\n  }, [table])\r\n\r\n  useEffect(() => { // retrieve cookie and changeTable on page load\r\n    const cookie = getCookieByName(\"table\")\r\n    if (cookie !== \"\" & cookie !== null & cookie !== undefined) {\r\n      changeTable(cookie)\r\n    }\r\n\r\n    // TODO: this should be placed in HoursAgoSlider.js but it would not run on page load that way.\r\n    // This is likely fixable by putting in the right dependency in the useEffect array at the end.\r\n    const cookieHoursAgo = getCookieByName(\"hoursAgo\")\r\n    if (cookieHoursAgo === null) {\r\n      setCookieByValue(120, \"hoursAgo\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/* Parent Group */}\r\n      <ButtonGroup>\r\n        <button className={`btn ${cloneActive}`} ref={clone} onClick={(e) => handleClick(e, clone)}>Clone</button>\r\n        <button className={`btn mr-5 ${upgradeActive}`} ref={upgrade} onClick={(e) => handleClick(e, upgrade)}>Upgrade</button>\r\n      </ButtonGroup>\r\n\r\n      {/* Child Group */}\r\n      <ButtonGroup>\r\n        <button className={`btn ${advanceActive}`} ref={advance} onClick={(e) => handleClick(e, advance)}>Advance</button>\r\n        <button className={`btn ${adviseActive}`} ref={advise} onClick={(e) => handleClick(e, advise)}>Advise</button>\r\n        <button className={`btn ${recruitActive}`} ref={recruit} onClick={(e) => handleClick(e, recruit)}>Recruit</button>\r\n      </ButtonGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => { // redux\r\n  return {\r\n    table: state.reducer.table,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeTable: (table) => dispatch(actions.changeTable(table)),\r\n    changeSaving: (saving) => dispatch(actions.changeSaving(saving)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSelector)","D:\\Code\\heroku\\react-dashboard\\src\\components\\Settings.js",["214","215"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { getCookieByName } from \"./CookieHandler\";\r\nimport RefreshSlider from \"./RefreshSlider\";\r\nimport HoursAgoSlider from \"./HoursAgoSlider\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/action\";\r\nimport { resizeAuto, resizeToFit } from \"./APIGrid\";\r\n\r\nfunction SettingsModal(props) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <RefreshSlider />\r\n          </Row>\r\n          <hr></hr>\r\n          <Row className=\"align-items-center\">\r\n            <HoursAgoSlider />\r\n          </Row>\r\n          <hr></hr>\r\n          <Row className=\"format-buttons\">\r\n            <Button className=\"resize\" onClick={resizeAuto}>\r\n              Fit To Headers\r\n            </Button>\r\n            <Button className=\"resize\" onClick={resizeToFit}>\r\n              Fit To Screen\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button className=\"btn-dark\" onClick={props.onHide}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction Settings({ changeInterval }) {\r\n  useEffect(() => {\r\n    // retrieve saved cookie interval value\r\n    const cookie = getCookieByName(\"interval\");\r\n    if ((cookie !== \"\") & (cookie !== null) & (cookie !== undefined)) {\r\n      changeInterval(cookie);\r\n    }\r\n  }, []);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary btn-dark settings-button\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        Settings\r\n      </Button>\r\n\r\n      <SettingsModal\r\n        show={modalShow}\r\n        onHide={() => {\r\n          setModalShow(false);\r\n        }}\r\n        changeInterval={changeInterval}\r\n        className=\"settings-modal\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  // redux\r\n  return {\r\n    changeInterval: (interval) => dispatch(actions.changeInterval(interval)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Settings);\r\n","D:\\Code\\heroku\\react-dashboard\\src\\components\\TimeLeft.js",["216","217"],"/* Displays time left until new data is loaded into grid\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../store/actions/action\"\r\nimport LoadingButton from \"./LoadingButton\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\r\n\r\nvar timer, printTime = null\r\n\r\nfunction RefreshSlider({ interval, changeLoading }) {\r\n  const [secondsLeft, setSecondsLeft] = useState(interval)\r\n\r\n  useEffect(() => { // check if manual. If not then start a new timer\r\n    if (interval > 0) {\r\n      startTimer()\r\n    }\r\n  }, [interval])\r\n\r\n  function startTimer() {\r\n    clearInterval(timer)\r\n    setSecondsLeft(interval * 60) // convert to seconds\r\n    timer = setInterval(countDown, 1000) // update secondsLeft every second\r\n  }\r\n\r\n  function countDown() {\r\n    setSecondsLeft((prevTime) => { // decrement secondsLeft by 1\r\n      printTime = genPrintTime(prevTime - 1)\r\n      return prevTime - 1\r\n    })\r\n  }\r\n\r\n  useEffect(() => { // check if timer is done, then trigger refresh\r\n    if (secondsLeft <= 0) {\r\n      changeLoading(true)\r\n      startTimer()\r\n\r\n      // TODO: make it unecessary to do a reload of the page\r\n      window.location.reload(false) // reloads page without redownloading content\r\n    }\r\n  }, [secondsLeft])\r\n\r\n  function genPrintTime(input) {\r\n    var minutes = Math.floor(input / 60)\r\n    var seconds = input - minutes * 60\r\n    var ret = \"\"\r\n    ret += \"\" + minutes + \":\" + (seconds < 10 ? \"0\" : \"\")\r\n    ret += \"\" + seconds\r\n    return ret\r\n  }\r\n\r\n  return ( // uses LoadingButton for manual pressing to refresh the grid data\r\n    <>\r\n      {interval > 0 ? <span className=\"timetext\">{printTime}</span> : <LoadingButton />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => { // redux\r\n  return {\r\n    interval: state.reducer.interval,\r\n    loading: state.reducer.loading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeInterval: (interval) => dispatch(actions.changeInterval(interval)),\r\n    changeLoading: (loading) => dispatch(actions.changeLoading(loading)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RefreshSlider);\r\n","D:\\Code\\heroku\\react-dashboard\\src\\components\\LoadingIcon.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\TableName.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\SavingIcon.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\CustomTooltip.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\store\\actions\\action.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-advance.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-recruit.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-advance.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-advise.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\upgrade-recruit.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\sample.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\data\\clone-advise.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\LoadingButton.js",[],["218","219"],"D:\\Code\\heroku\\react-dashboard\\src\\components\\RefreshSlider.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\HoursAgoSlider.js",["220","221"],"/* Bootstrap Slider for selecting time filter on data from the\r\n * response call in APIGrid. Sets a cookie to save the client settings\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport * as actions from \"../store/actions/action\"\r\nimport { getCookieByName, setCookieByValue } from \"./CookieHandler\"\r\nimport ReactBootstrapSlider from \"react-bootstrap-slider\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\r\n\r\nfunction HoursAgoSlider(props) {\r\n  const { hoursAgo, changeHoursAgo } = props // redux state props\r\n\r\n  useEffect(() => { // retrieve saved cookie hoursAgo value \r\n    const cookie = getCookieByName(\"hoursAgo\")\r\n    if ((cookie !== \"\") & (cookie !== null) & (cookie !== undefined)) {\r\n      changeHoursAgo(cookie)\r\n    }\r\n  }, [])\r\n\r\n  const changeValue = (e) => { // set cookie and update redux state\r\n    setCookieByValue(e.target.value, \"hoursAgo\")\r\n    changeHoursAgo(Number(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Title */}\r\n      <span className=\"hoursText\">Show Data from <span className=\"hoursAgo\">{hoursAgo}</span> Hours Ago: </span>\r\n      <br />\r\n\r\n      {/* Slider */}\r\n      <ReactBootstrapSlider\r\n        value={hoursAgo}\r\n        max={120}\r\n        min={1}\r\n        slideStop={changeValue}\r\n        ticks={[1, 12, 24, 48, 72, 120]}\r\n        ticks_snap_bounds={24}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => { // redux\r\n  return {\r\n    hoursAgo: state.reducer.hoursAgo, \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeHoursAgo: (hoursAgo) => dispatch(actions.changeHoursAgo(hoursAgo)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HoursAgoSlider)\r\n","D:\\Code\\heroku\\react-dashboard\\src\\components\\CookieHandler.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\SampleFooter.js",[],"D:\\Code\\heroku\\react-dashboard\\src\\components\\Footer.js",[],"D:\\Code\\static\\p04-dashboard\\src\\index.js",[],"D:\\Code\\static\\p04-dashboard\\src\\store\\reducers\\reducer.js",[],"D:\\Code\\static\\p04-dashboard\\src\\App.js",["222"],"D:\\Code\\static\\p04-dashboard\\src\\components\\Footer.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\NavigationBar.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\NavBox.js",["223","224","225"],"D:\\Code\\static\\p04-dashboard\\src\\components\\APIGrid.js",["226","227"],"D:\\Code\\static\\p04-dashboard\\src\\components\\SampleFooter.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\Settings.js",["228","229"],"D:\\Code\\static\\p04-dashboard\\src\\components\\LoadingIcon.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\SavingIcon.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\TableSelector.js",["230","231"],"D:\\Code\\static\\p04-dashboard\\src\\components\\TableName.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\TimeLeft.js",["232","233"],"D:\\Code\\static\\p04-dashboard\\src\\store\\actions\\action.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\CustomTooltip.js",[],"D:\\Code\\static\\p04-dashboard\\src\\data\\sample.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\CookieHandler.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\RefreshSlider.js",[],"D:\\Code\\static\\p04-dashboard\\src\\components\\HoursAgoSlider.js",["234","235"],"D:\\Code\\static\\p04-dashboard\\src\\components\\LoadingButton.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"240","severity":1,"message":"244","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":69,"column":7,"nodeType":"247","endLine":69,"endColumn":65},{"ruleId":"245","severity":1,"message":"246","line":72,"column":7,"nodeType":"247","endLine":72,"endColumn":65},{"ruleId":"240","severity":1,"message":"248","line":65,"column":11,"nodeType":"242","messageId":"243","endLine":65,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":127,"column":6,"nodeType":"251","endLine":127,"endColumn":15,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":115,"column":6,"nodeType":"251","endLine":115,"endColumn":13,"suggestions":"254"},{"ruleId":"249","severity":1,"message":"255","line":129,"column":6,"nodeType":"251","endLine":129,"endColumn":8,"suggestions":"256"},{"ruleId":"240","severity":1,"message":"257","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"249","severity":1,"message":"258","line":60,"column":6,"nodeType":"251","endLine":60,"endColumn":8,"suggestions":"259"},{"ruleId":"249","severity":1,"message":"260","line":20,"column":6,"nodeType":"251","endLine":20,"endColumn":16,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"262","line":43,"column":6,"nodeType":"251","endLine":43,"endColumn":19,"suggestions":"263"},{"ruleId":"236","replacedBy":"264"},{"ruleId":"238","replacedBy":"265"},{"ruleId":"240","severity":1,"message":"257","line":5,"column":17,"nodeType":"242","messageId":"243","endLine":5,"endColumn":25},{"ruleId":"249","severity":1,"message":"266","line":21,"column":6,"nodeType":"251","endLine":21,"endColumn":8,"suggestions":"267"},{"ruleId":"240","severity":1,"message":"241","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"240","severity":1,"message":"244","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":69,"column":7,"nodeType":"247","endLine":69,"endColumn":65},{"ruleId":"245","severity":1,"message":"246","line":72,"column":7,"nodeType":"247","endLine":72,"endColumn":65},{"ruleId":"240","severity":1,"message":"248","line":65,"column":11,"nodeType":"242","messageId":"243","endLine":65,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":127,"column":6,"nodeType":"251","endLine":127,"endColumn":15,"suggestions":"268"},{"ruleId":"240","severity":1,"message":"257","line":1,"column":28,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"249","severity":1,"message":"258","line":60,"column":6,"nodeType":"251","endLine":60,"endColumn":8,"suggestions":"269"},{"ruleId":"249","severity":1,"message":"253","line":115,"column":6,"nodeType":"251","endLine":115,"endColumn":13,"suggestions":"270"},{"ruleId":"249","severity":1,"message":"255","line":129,"column":6,"nodeType":"251","endLine":129,"endColumn":8,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"260","line":20,"column":6,"nodeType":"251","endLine":20,"endColumn":16,"suggestions":"272"},{"ruleId":"249","severity":1,"message":"262","line":43,"column":6,"nodeType":"251","endLine":43,"endColumn":19,"suggestions":"273"},{"ruleId":"240","severity":1,"message":"257","line":5,"column":17,"nodeType":"242","messageId":"243","endLine":5,"endColumn":25},{"ruleId":"249","severity":1,"message":"266","line":21,"column":6,"nodeType":"251","endLine":21,"endColumn":8,"suggestions":"274"},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'width' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'changeTable' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshCells'. Either include it or remove the dependency array.","ArrayExpression",["277"],"React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'changeTable'. Either include it or remove the dependency array. If 'changeTable' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["279"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'changeInterval'. Either include it or remove the dependency array. If 'changeInterval' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["280"],"React Hook useEffect has a missing dependency: 'startTimer'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has missing dependencies: 'changeLoading' and 'startTimer'. Either include them or remove the dependency array. If 'changeLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["282"],["275"],["276"],"React Hook useEffect has a missing dependency: 'changeHoursAgo'. Either include it or remove the dependency array.",["283"],["284"],["285"],["286"],["287"],["288"],["289"],["290"],"no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"291","fix":"305"},{"desc":"297","fix":"306"},{"desc":"293","fix":"307"},{"desc":"295","fix":"308"},{"desc":"299","fix":"309"},{"desc":"301","fix":"310"},{"desc":"303","fix":"311"},"Update the dependencies array to be: [loading, refreshCells]",{"range":"312","text":"313"},"Update the dependencies array to be: [handleClick, table]",{"range":"314","text":"315"},"Update the dependencies array to be: [changeTable]",{"range":"316","text":"317"},"Update the dependencies array to be: [changeInterval]",{"range":"318","text":"319"},"Update the dependencies array to be: [interval, startTimer]",{"range":"320","text":"321"},"Update the dependencies array to be: [changeLoading, secondsLeft, startTimer]",{"range":"322","text":"323"},"Update the dependencies array to be: [changeHoursAgo]",{"range":"324","text":"325"},{"range":"326","text":"313"},{"range":"327","text":"319"},{"range":"328","text":"315"},{"range":"329","text":"317"},{"range":"330","text":"321"},{"range":"331","text":"323"},{"range":"332","text":"325"},[3640,3649],"[loading, refreshCells]",[4355,4362],"[handleClick, table]",[4931,4933],"[changeTable]",[1890,1892],"[changeInterval]",[631,641],"[interval, startTimer]",[1324,1337],"[changeLoading, secondsLeft, startTimer]",[844,846],"[changeHoursAgo]",[3640,3649],[1890,1892],[4355,4362],[4931,4933],[631,641],[1324,1337],[844,846]]